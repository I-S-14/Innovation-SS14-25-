using Content.Client.Stylesheets;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client._IS.Payment;

[GenerateTypedNameReferences]
public sealed partial class BalanceWithdrawWindow : DefaultWindow
{
    public event Action<int>? OnWithdrawButtonClicked;
    public event Action? OnLockButtonClicked;

    private string _account = "";
    private int _value;
    private int _balance;

    public BalanceWithdrawWindow()
    {
        RobustXamlLoader.Load(this);
        LockButton.AddStyleClass(StyleBase.ButtonCaution);

        // For tests
        SetBalance(123);

        WithdrawButton.OnPressed += _ => OnWithdrawButtonClicked?.Invoke(_value);
        LockButton.OnPressed += _ => OnLockButtonClicked?.Invoke();

        WithdrawValueLineEdit.OnTextEntered += _ => CheckWithdrawValue();

        Add50Button.OnPressed  += _ => OnAdd50ButtonPressed();
        Sub50Button.OnPressed  += _ => OnSub50ButtonPressed();
        SetMaxButton.OnPressed += _ => OnMaxButtonPressed();
    }

    private void OnAdd50ButtonPressed()
    {
        WithdrawValueLineEdit.Text = (_value + 50).ToString();
        CheckWithdrawValue();
    }

    private void OnSub50ButtonPressed()
    {
        WithdrawValueLineEdit.Text = (_value - 50).ToString();
        CheckWithdrawValue();
    }

    private void OnMaxButtonPressed()
    {
        WithdrawValueLineEdit.Text = _balance.ToString();
        CheckWithdrawValue();
    }

    private void CheckWithdrawValue()
    {
        if (int.TryParse(WithdrawValueLineEdit.Text, out var value))
            _value = Math.Clamp(value, 0, _balance);

        WithdrawValueLineEdit.Text = _value.ToString();
    }
    protected override void Opened()
    {
        base.Opened();
        WithdrawValueLineEdit.GrabKeyboardFocus();
    }

    public void SetBalance(int balance)
    {
        _balance = balance;
        WithdrawBalanceValue.Text = _balance.ToString();
    }
    public void SetAccount(string account)
    {
        _account = account;
        if (_account != "")
            WithdrawAccountValue.Text = _account;
    }
}
